test_name: GET /sca/001

marks:
  - base_tests

stages:

  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Parameters -> limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
    response:
      status_code: 200
      json:
        data:
          affected_items:
            - &sca_agent_result_001
              name: !anystr
              pass: !anyint
              score: !anyint
              references: !anystr #THIS FIELD IS NOT INCLUDED IN ALL ANSWERS
              fail: !anyint
              description: !anystr
              policy_id: !anystr
              start_scan: !anystr
              end_scan: !anystr
              hash_file: !anystr
              total_checks: !anyint
              invalid: !anyint
            - <<: *sca_agent_result_001
          total_affected_items: 2
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> offset=1,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        offset: 1
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=-score,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -score
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
            - <<: *sca_agent_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=+score,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        sort: -score
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> search=cis,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: cis
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> q=score>50,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: score>40
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=2500
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2500
    response:
      status_code: 400
      json:
        code: 1405
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Parameters -> name=CIS benchmark for Debian/Linux 9 L2,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        name: CIS benchmark for Debian/Linux 9 L2
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
              name: CIS benchmark for Debian/Linux 9 L2
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> references=https://www.cisecurity.org/cis-benchmarks/,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        references: https://www.cisecurity.org/cis-benchmarks/
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
              references: https://www.cisecurity.org/cis-benchmarks/
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> description=This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 9.,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        description: This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 9.
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_001
              description: !anystr
          failed_items: []
          total_failed_items: 0

---
test_name: GET /sca/001/checks/cis_debian9_L1

stages:

  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Parameters -> limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - &sca_check_result_001
              remediation: !anystr
              rationale: !anystr
              title: !anystr
              policy_id: !anystr
              file: !anystr
              description: !anystr
              id: !anyint
              result: !anystr
              compliance: !anything
              rules: !anything
              condition: !anything
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=4
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 4
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
            - <<: *sca_check_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=-id,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -id
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> search=passwd,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: passwd
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> q=id=3098
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        q: id=3098
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
              id: 3098
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> result=failed,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        result: failed
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
              result: failed
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> file=/etc/shadow,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        file: /etc/shadow
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
              file: /etc/shadow
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=2500
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2500
    response:
      status_code: 400
      json:
        code: 1405
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Parameters -> title="Ensure shadow group is empty,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        title: Ensure shadow group is empty
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
              title: Ensure shadow group is empty
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> remediation=Remove any legacy + entries from /etc/group if they exist.,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/001/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        remediation: Remove any legacy + entries from /etc/group if they exist.
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_001
              remediation: Remove any legacy + entries from /etc/group if they exist.
          failed_items: []
          total_failed_items: 0

---
test_name: GET /sca/002

stages:

  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Parameters -> limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
    response:
      status_code: 200
      json:
        data:
          affected_items:
            - &sca_agent_result_002
              name: !anystr
              pass: !anyint
              score: !anyint
              references: !anystr #THIS FIELD IS NOT INCLUDED IN ALL ANSWERS
              fail: !anyint
              description: !anystr
              policy_id: !anystr
              start_scan: !anystr
              end_scan: !anystr
              hash_file: !anystr
              total_checks: !anyint
              invalid: !anyint
            - <<: *sca_agent_result_002
          total_affected_items: 2
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> offset=1,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        offset: 1
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=-score,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -score
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
            - <<: *sca_agent_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=+score,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        sort: -score
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> search=cis,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: cis
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> q=score>50,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: score>40
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=2500
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2500
    response:
      status_code: 400
      json:
        code: 1405
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Parameters -> name=CIS benchmark for Debian/Linux 9 L2,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        name: CIS benchmark for Debian/Linux 9 L2
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
              name: CIS benchmark for Debian/Linux 9 L2
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> references=https://www.cisecurity.org/cis-benchmarks/,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        references: https://www.cisecurity.org/cis-benchmarks/
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
              references: https://www.cisecurity.org/cis-benchmarks/
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> description=This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 9.,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        description: This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 9.
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_002
              description: !anystr
          failed_items: []
          total_failed_items: 0

---
test_name: GET /sca/002/checks/cis_debian9_L1

stages:

  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Parameters -> limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - &sca_check_result_002
              remediation: !anystr
              rationale: !anystr
              title: !anystr
              policy_id: !anystr
              file: !anystr
              description: !anystr
              id: !anyint
              result: !anystr
              compliance: !anything
              rules: !anything
              condition: !anything
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=4
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 4
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
            - <<: *sca_check_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=-id,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -id
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> search=passwd,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: passwd
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> q=id=3098
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        q: id=3098
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
              id: 3098
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> result=failed,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        result: failed
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
              result: failed
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> file=/etc/shadow,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        file: /etc/shadow
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
              file: /etc/shadow
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=2500
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2500
    response:
      status_code: 400
      json:
        code: 1405
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Parameters -> title="Ensure shadow group is empty,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        title: Ensure shadow group is empty
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
              title: Ensure shadow group is empty
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> remediation=Remove any legacy + entries from /etc/group if they exist.,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/002/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        remediation: Remove any legacy + entries from /etc/group if they exist.
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_002
              remediation: Remove any legacy + entries from /etc/group if they exist.
          failed_items: []
          total_failed_items: 0

---
test_name: GET /sca/003

stages:

  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Parameters -> limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
    response:
      status_code: 200
      json:
        data:
          affected_items:
            - &sca_agent_result_003
              name: !anystr
              pass: !anyint
              score: !anyint
              references: !anystr #THIS FIELD IS NOT INCLUDED IN ALL ANSWERS
              fail: !anyint
              description: !anystr
              policy_id: !anystr
              start_scan: !anystr
              end_scan: !anystr
              hash_file: !anystr
              total_checks: !anyint
              invalid: !anyint
            - <<: *sca_agent_result_003
          total_affected_items: 2
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> offset=1,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        offset: 1
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=-score,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -score
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
            - <<: *sca_agent_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=+score,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        sort: -score
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> search=cis,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: cis
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> q=score>50,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        q: score>40
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=2500
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2500
    response:
      status_code: 400
      json:
        code: 1405
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Parameters -> name=CIS benchmark for Debian/Linux 9 L2,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        name: CIS benchmark for Debian/Linux 9 L2
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
              name: CIS benchmark for Debian/Linux 9 L2
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> references=https://www.cisecurity.org/cis-benchmarks/,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        references: https://www.cisecurity.org/cis-benchmarks/
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
              references: https://www.cisecurity.org/cis-benchmarks/
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> description=This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 9.,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        description: This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux 9.
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_agent_result_003
              description: !anystr
          failed_items: []
          total_failed_items: 0

---
test_name: GET /sca/003/checks/cis_debian9_L1

stages:

  - name: Request
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
    response:
      status_code: 200
      json:
        data: !anything

  - name: Parameters -> limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - &sca_check_result_003
              remediation: !anystr
              rationale: !anystr
              title: !anystr
              policy_id: !anystr
              file: !anystr
              description: !anystr
              id: !anyint
              result: !anystr
              compliance: !anything
              rules: !anything
              condition: !anything
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=4
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 4
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
            - <<: *sca_check_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> sort=-id,limit=2
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2
        sort: -id
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> search=passwd,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        search: passwd
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> q=id=3098
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        q: id=3098
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
              id: 3098
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> result=failed,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        result: failed
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
              result: failed
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> file=/etc/shadow,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        file: /etc/shadow
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
              file: /etc/shadow
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> limit=2500
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 2500
    response:
      status_code: 400
      json:
        code: 1405
        dapi_errors: !anything
        detail: !anystr
        status: 400
        title: !anystr
        type: !anystr

  - name: Parameters -> title="Ensure shadow group is empty,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        title: Ensure shadow group is empty
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
              title: Ensure shadow group is empty
          failed_items: []
          total_failed_items: 0

  - name: Parameters -> remediation=Remove any legacy + entries from /etc/group if they exist.,limit=1
    request:
      verify: False
      url: "{protocol:s}://{host:s}:{port:d}/{version:s}/sca/003/checks/cis_debian9_L1"
      method: GET
      headers:
        Authorization: "Bearer {test_login_token}"
      params:
        limit: 1
        remediation: Remove any legacy + entries from /etc/group if they exist.
    response:
      status_code: 200
      json:
        data:
          total_affected_items: !anyint
          affected_items:
            - <<: *sca_check_result_003
              remediation: Remove any legacy + entries from /etc/group if they exist.
          failed_items: []
          total_failed_items: 0
